@page "/fetchdatamud"
@using BlazorServerTest.Core.Data.Entities
@using BlazorServerTest.Core.Models
@using BlazorServerTest.Services
@using Microsoft.AspNetCore.Components
@using MudBlazor
@inject RecipeViewService RecipeService
@inherits LayoutComponentBase

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a repository.</p>

<MudTable ServerData="@(new Func<TableState, Task<TableData<RecipeViewModel>>>(ServerReload))"
          Dense="true" Hover="true" @ref="table">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="nr_field" T="RecipeViewModel">Nr</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="sign_field" T="RecipeViewModel">Description</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="name_field" T="RecipeViewModel">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="position_field" T="RecipeViewModel">Categories</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Sign">@context.Description</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">
            @foreach (var category in context.Categories)
            {
                <MudChip>@category.Name</MudChip>
            }
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No matching records found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private TableData<RecipeViewModel> data;
    private MudTable<RecipeViewModel> table;

    private int totalItems;
	private string searchString = null;
    /*
    protected override async Task OnInitializedAsync()
    {
        data = await RecipeRepository.LoadTable();
    }
    */
    private async Task<TableData<RecipeViewModel>> ServerReload(TableState state)
    {
        return await RecipeService.LoadTable(state);
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }
}
